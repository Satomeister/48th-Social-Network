{"version":3,"sources":["api/api.js","FBconfig/config.js","store/usersReducer.js","store/homeReducer.js","store/profileReducer.js","store/authReducer.js","components/modals/ModalWrapper.js","components/common/CredErrorBlock/CredErrorBlock.js","components/common/InputBox/InputBox.js","components/common/Preloader/Preloaders.js","components/modals/CreatePostModal.js","components/Notifications/Notifications.js","components/common/Tooltip/Tooltip.js","pages/Header/Header.js","store/fullPostReducer.js","components/Post/PostContent/PostActions.js","components/Post/PostContent/PostContent.js","components/modals/DeleteModal.js","components/Post/DeletePost.js","components/modals/FullPostModal/Comment/DeleteComment.js","components/modals/FullPostModal/Comment/Comment.js","components/modals/FullPostModal/Comment/CommentForm.js","components/modals/FullPostModal/FullPostModal.js","components/Post/Post.js","components/modals/EditProfileModal.js","components/modals/EditPhotoModal.js","components/Profile/Profile.js","pages/Home/Home.js","pages/UsersProfile/UsersProfile.js","hoc/withAuthRedirect.js","pages/auth/AuthFormContainer.js","pages/auth/Login.js","pages/auth/Signup.js","App.js","serviceWorker.js","store/rootStore.js","index.js","components/Profile/Profile.module.scss","components/Post/PostContent/PostContent.module.scss","cssCommonModules/buttons.module.scss","pages/auth/auth.module.scss","pages/Header/Header.module.scss","components/modals/FullPostModal/Comment/Comment.module.scss","components/modals/FullPostModal/CommentModal.module.scss","pages/Home/Home.module.scss","components/common/InputBox/InputBox.module.scss","components/Post/Post.module.scss","components/modals/Modal.module.scss","components/Notifications/Notifications.module.scss","components/common/Tooltip/Tooltip.module.scss","components/common/CredErrorBlock/CredErrorBlock.module.scss"],"names":["axios","defaults","baseURL","usersApi","handle","email","password","confirmPassword","post","get","postsApi","body","postId","bio","location","commentId","delete","arr","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REMOVE_POST","initialState","posts","getUserDetailsFetching","user","setGetUserDetailsFetching","isFetching","type","userProfileLikeCountPlus","userProfileLikeCountMinus","addNewPostForUsersProfile","removePostForUsersProfile","userProfileCommentCountPlus","userProfileCommentCountMinus","isHomePageFetching","isFormFetching","createPostModalOpen","addNewPostError","setIsHomePageFetching","addNewPostSuccess","setAddNewPostError","error","setFormFetching","removePost","setCreatePostModalOpen","isModal","commentCountPlus","commentCountMinus","likeCountPlus","likeCountMinus","updatePostsUserPhoto","image","SET_USER_DATA","SET_IS_FETCHING","credentials","likes","notifications","isProfileFetching","addUserDetailsError","editPhotoModal","editProfileModal","setIsProfileFetching","updateLikedPosts","event","setEditPhotoModal","setEditProfileModal","updateNotifications","updateUserData","getAuthUserDetails","dispatch","a","res","status","payload","data","response","SIGNUP_ERROR","LOGIN_ERROR","loginError","signupError","isAuth","authorizationsSuccess","ModalWrapper","closeModal","modalWrapCenter","isModalOpen","children","modalWrap","useRef","className","classes","onMouseDown","e","target","current","ref","modal","CredErrorBlock","errorMessage","credErrorBlock","InputBox","value","label","setValue","isError","inputBox","onChange","errorInput","id","required","errorLabel","htmlFor","input","Preloader","alignCenter","height","style","role","connect","state","homePage","addNewPost","useState","setPost","useEffect","onSubmit","preventDefault","disabled","btn","btnSubmit","marginLeft","marginTop","onClick","markNotificationsRead","setIsNotificationsOpen","node","unreadNotifications","filter","not","read","document","addEventListener","handleClickOutside","map","notificationId","length","removeEventListener","contains","index","action","time","moment","createdAt","fromNow","icon","faHeart","size","color","faComment","to","recipient","key","sender","padding","fontSize","Tooltip","text","tooltip","auth","profilePage","isNotificationOpen","unreadNotCount","header","nav","exact","path","onMouseMove","navIcon","faPlus","faHome","faUserAlt","faBell","notCount","navItem","SET_POST_DATA","ADD_NEW_COMMENT","FORM_IS_FETCHING","REMOVE_COMMENT","postDataError","getPostFetching","commentError","isDeleteFetching","getPostDataError","bool","getPostDataFetching","setCommentError","setIsFormFetching","removeComment","deleteCommentAnimation","comment","setIsDeleteFetching","PostActions","isPostLiked","likePostHandler","unLikePostHandler","likeCount","openCommentModal","commentCount","actions","iconText","Heart","comments","Comment","PostContent","content","userHandle","calendar","isHomeFormFetching","postPage","deleteItem","title","setDeletePostModal","btnRed","deletePost","isAuthUserPost","deletedPost","deletePostModal","basket","faTrashAlt","deleteComment","console","log","deletedComment","deleteCommentModal","setDeleteCommentModal","authUserHandle","isAuthUserComment","setIsAuthUserComment","isAnimation","commentWithAnimations","background","userImage","photo","DeleteComment","sendComment","setTimeout","setComment","isCommentModal","overflow","width","postContent","closeButton","closeIcon","faTimes","withRouter","likedPosts","likePost","unLikePost","getPostDataById","commentModalOpen","history","setIsAuthUserPost","setIsCommentModal","oldPathState","setOldPath","setIsPostLiked","some","likedPost","push","oldPath","window","pathname","newPath","pushState","closeCommentModal","userPhoto","addUserDetails","setShowModal","setBio","isBioError","setBioError","isLocationError","setLocationError","setLocation","indexOf","marginBottom","editPhoto","imageUrl","db","firestore","doc","update","then","collection","where","forEach","err","file","setFile","fileTypeError","setFileTypeError","submitHandler","split","storageRef","storage","fileRef","child","name","put","getDownloadURL","files","signout","localStorage","removeItem","headers","common","userProfileWrap","userProfile","faPen","faMapMarkerAlt","faSignOutAlt","edit","getPosts","isMobileScreenWidth","documentElement","clientWidth","homeContainer","postsContainer","postsTitle","userPage","getUserDetails","match","params","isAuthUserProfile","setIsAuthUserProfile","go","filteredPosts","sort","b","Date","postsMarkup","homeClasses","withAuthRedirect","Component","toRedirect","props","AuthFormContainer","authPage","authContent","lockIcon","faLock","login","setItem","token","setEmail","setPassword","form","button","link","signup","setHandle","setConfirmPassword","FBIdToken","jwtDecode","exp","now","Boolean","hostname","storeReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.aa2c56fe.chunk.js","sourcesContent":["import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://us-central1-social-app-portfolio.cloudfunctions.net/api'\n\nfunction getOptions() {\n    const token = localStorage.FBIdToken\n    if (token) {\n        return {\n            headers: {'Authorization': token}\n        }\n    }\n}\n\nexport const usersApi = {\n    signup(handle, email, password, confirmPassword) {\n        return axios.post('/signup', {handle, email, password, confirmPassword})\n    },\n    login(email, password) {\n        return axios.post('/login', {email, password})\n    },\n    logout() {\n        return axios.get('/signout')\n    },\n    getUserDetails(handle) {\n        return axios.get(`/user/${handle}`)\n    }\n}\n\n\nexport const postsApi = {\n    getPosts() {\n        return axios.get('/posts')\n    },\n    addNewPost(body) {\n        return axios.post('/post', {body})\n    },\n    getAuthUser() {\n        return axios.get('/user'/*,getOptions()*/)\n    },\n    getPostById(postId) {\n        return axios.get(`/post/${postId}`)\n    },\n    addUserDetails(bio, location) {\n        return axios.post('/user', {bio, location})\n    },\n    likePost(postId) {\n        return axios.get(`/post/${postId}/like`)\n    },\n    unlikePost(postId) {\n        return axios.get(`/post/${postId}/unlike`)\n    },\n    commentPost(postId, body) {\n        return axios.post(`/post/${postId}/comment`, {body})\n    },\n    deleteComment(postId, commentId) {\n        return axios.delete(`/comment/${postId}/${commentId}`)\n    },\n    deletePost(postId) {\n        return axios.delete(`/post/${postId}`)\n    },\n    markNotificationsRead(arr) {\n        return axios.post('/notifications', arr)\n    }\n}","import firebase from \"firebase\" \nimport 'firebase/storage'\n\nexport const app = firebase.initializeApp({\n    apiKey: \"AIzaSyDPbMMe9DAGTo36ulfKPHfN18XwILSQtLQ\",\n    authDomain: \"social-app-portfolio.firebaseapp.com\",\n    databaseURL: \"https://social-app-portfolio.firebaseio.com\",\n    projectId: \"social-app-portfolio\",\n    storageBucket: \"social-app-portfolio.appspot.com\",\n    messagingSenderId: \"291676968032\",\n    appId: \"1:291676968032:web:20cde625b2e6fcb055df05\"\n})","import { usersApi } from \"../api/api\"\n\nconst SET_USER_DETAILS = 'usersReducer/SET_USER_DETAILS'\nconst LIKE_COUNT_MINUS = 'usersReducer/LIKE_COUNT_MINUS'\nconst LIKE_COUNT_PLUS = 'usersReducer/LIKE_COUNT_PLUS'\nconst COMMENT_COUNT_PLUS = 'usersReducer/COMMENT_COUNT_PLUS'\nconst COMMENT_COUNT_MINUS = 'userReducer/COMMENT_COUNT_MINUS'\nconst ADD_NEW_POST_SUCCESS = 'usersReducer/ADD_NEW_POST_SUCCESS'\nconst REMOVE_POST = 'homeReducer/REMOVE_POST'\nconst SET_GET_USER_DETAILS_FETCHING = 'homeReducer/SET_GET_USER_DETAILS_FETCHING'\n\nconst initialState = {\n    posts: [],\n    getUserDetailsFetching: false,\n    user: null\n}\n\nexport const usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DETAILS:\n            return {\n                ...state, ...action.payload\n            }\n        case SET_GET_USER_DETAILS_FETCHING:\n            return {\n                ...state,\n                getUserDetailsFetching: action.isFetching\n            }\n        case ADD_NEW_POST_SUCCESS:\n            return {\n                ...state,\n                posts: [action.post,...state.posts]\n            }\n        case REMOVE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post.postId !== action.postId)\n            }\n        case LIKE_COUNT_PLUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, likeCount: post.likeCount+1}\n                    }\n                    return post\n                })\n            }\n        case LIKE_COUNT_MINUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, likeCount: post.likeCount-1}\n                    }\n                    return post\n                })\n            }\n        case COMMENT_COUNT_PLUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, commentCount: post.commentCount+1}\n                    }\n                    return post\n                })\n            }\n        case COMMENT_COUNT_MINUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, commentCount: post.commentCount-1}\n                    }\n                    return post\n                })\n            }\n        default:\n            return state\n    }\n}\n\nconst setGetUserDetailsFetching = isFetching => ({type: SET_GET_USER_DETAILS_FETCHING, isFetching})\nexport const userProfileLikeCountPlus = postId => ({type: LIKE_COUNT_PLUS, postId})\nexport const userProfileLikeCountMinus = postId => ({type: LIKE_COUNT_MINUS, postId})\nexport const addNewPostForUsersProfile = post => ({type:ADD_NEW_POST_SUCCESS, post})\nexport const removePostForUsersProfile = postId => ({type: REMOVE_POST, postId})\nexport const userProfileCommentCountPlus = postId => ({type: COMMENT_COUNT_PLUS, postId})\nexport const userProfileCommentCountMinus = postId => ({type: COMMENT_COUNT_MINUS, postId})\nconst setUserDetails = payload => ({type: SET_USER_DETAILS, payload})\n\nexport const getUserDetails = handle => async dispatch => {\n    dispatch(setGetUserDetailsFetching(true))\n    try {\n        const res = await usersApi.getUserDetails(handle)\n        if(res.status === 200){\n            dispatch(setUserDetails(res.data))\n            dispatch(setGetUserDetailsFetching(false))\n        }\n    }\n    catch (err) {\n        dispatch(setGetUserDetailsFetching(false))\n        if(err.response){\n            if (err.response.status === 400) {\n                //Post not found\n                //Post already liked\n            }\n            if (err.response.status === 500) {\n                //error\n            }\n        }\n    }\n}","import { postsApi} from \"../api/api\"\nimport { updateLikedPosts } from \"./profileReducer\"\nimport {\n    addNewPostForUsersProfile,\n    removePostForUsersProfile,\n    userProfileLikeCountMinus,\n    userProfileLikeCountPlus\n} from \"./usersReducer\"\n\nconst SET_ALL_POSTS = 'homeReducer/SET_ALL_POSTS'\nconst ADD_NEW_POST_SUCCESS = 'homeReducer/ADD_NEW_POST_SUCCESS'\nconst SET_FORM_FETCHING = 'homeReducer/SET_FORM_FETCHING'\nconst UPDATE_POSTS_USER_PHOTO = 'homeReducer/UPDATE_POSTS_USER_PHOTO'\nconst LIKE_COUNT_MINUS = 'homeReducer/LIKE_COUNT_MINUS'\nconst LIKE_COUNT_PLUS = 'homeReducer/LIKE_COUNT_PLUS'\nconst COMMENT_COUNT_PLUS = 'homeReducer/COMMENT_COUNT_PLUS'\nconst COMMENT_COUNT_MINUS = 'homeReducer/COMMENT_COUNT_MINUS'\nconst REMOVE_POST = 'homeReducer/REMOVE_POST'\nconst SET_CREATE_POST_MODAL = 'homeReducer/SET_CREATE_POST_MODAL'\nconst ADD_NEW_POST_ERROR = 'homeReducer/ADD_NEW_POST_ERROR'\nconst SET_IS_HOME_PAGE_FETCHING = 'homeReducer/SET_IS_HOME_PAGE_FETCHING'\n\nconst initialState = {\n    posts: [],\n    isHomePageFetching: false,\n    isFormFetching: false,\n    createPostModalOpen: false,\n    addNewPostError: null\n}\n\nexport const homeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_ALL_POSTS:\n            return {\n                ...state,\n                posts: action.posts\n            }\n        case SET_IS_HOME_PAGE_FETCHING:\n            return {\n                ...state,\n                isHomePageFetching: action.isFetching\n            }\n        case ADD_NEW_POST_SUCCESS:\n            return {\n                ...state,\n                posts: [action.post,...state.posts]\n            }\n        case ADD_NEW_POST_ERROR:\n            return {\n                ...state,\n                addNewPostError: action.error\n            }\n        case SET_FORM_FETCHING:\n            return {\n                ...state,\n                isFormFetching: action.isFormFetching\n            }\n        case REMOVE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post.postId !== action.postId)\n            }\n        case UPDATE_POSTS_USER_PHOTO:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.userHandle === action.handle){\n                        return {...post, userImage: action.image}\n                    }\n                    return post\n                })\n            }\n        case SET_CREATE_POST_MODAL:\n            return {\n                ...state,\n                createPostModalOpen: action.isModal\n            }\n        case LIKE_COUNT_PLUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, likeCount: post.likeCount+1}\n                    }\n                    return post\n                })\n            }\n        case LIKE_COUNT_MINUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, likeCount: post.likeCount-1}\n                    }\n                    return post\n                })\n            }\n        case COMMENT_COUNT_PLUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, commentCount: post.commentCount+1}\n                    }\n                    return post\n                })\n            }\n        case COMMENT_COUNT_MINUS:\n            return {\n                ...state,\n                posts: state.posts.map(post => {\n                    if(post.postId === action.postId){\n                        return {...post, commentCount: post.commentCount-1}\n                    }\n                    return post\n                })\n            }\n        default:\n            return state\n    }\n}\n\nconst setAllPosts = posts => ({type: SET_ALL_POSTS, posts})\nexport const setIsHomePageFetching = isFetching => ({type: SET_IS_HOME_PAGE_FETCHING, isFetching})\nconst addNewPostSuccess = post => ({type:ADD_NEW_POST_SUCCESS, post})\nconst setAddNewPostError = error => ({type: ADD_NEW_POST_ERROR, error})\nconst setFormFetching = isFormFetching => ({type: SET_FORM_FETCHING, isFormFetching})\nconst removePost = postId => ({type: REMOVE_POST, postId})\nexport const setCreatePostModalOpen = isModal => ({type: SET_CREATE_POST_MODAL, isModal})\nexport const commentCountPlus = postId => ({type: COMMENT_COUNT_PLUS, postId})\nexport const commentCountMinus = postId => ({type: COMMENT_COUNT_MINUS, postId})\nconst likeCountPlus = postId => ({type: LIKE_COUNT_PLUS, postId})\nconst likeCountMinus = postId => ({type: LIKE_COUNT_MINUS, postId})\nexport const updatePostsUserPhoto = (image,handle) => ({type: UPDATE_POSTS_USER_PHOTO, image,handle})\n\nexport const getPosts = () => async dispatch => {\n    dispatch(setIsHomePageFetching(true))\n    try {\n        const res = await postsApi.getPosts()\n        if(res.status === 200){\n            dispatch(setAllPosts(res.data))\n            dispatch(setIsHomePageFetching(false))\n        }\n    }\n    catch (err) {\n        if (err.response.status === 500) {\n            // error\n        }\n    }\n}\n\nexport const addNewPost = post => async dispatch => {\n    dispatch(setFormFetching(true))\n    try {\n        const res = await postsApi.addNewPost(post)\n        if(res.status === 200){\n            dispatch(addNewPostSuccess(res.data))\n            dispatch(addNewPostForUsersProfile(res.data))\n            dispatch(setAddNewPostError(null))\n            dispatch(setCreatePostModalOpen(false))\n            dispatch(setFormFetching(false))\n        }\n    }\n    catch (err) {\n        dispatch(setFormFetching(false))\n        if(err.response){\n            if (err.response.status === 400) {\n                dispatch(setAddNewPostError(err.response.data.error))\n            }\n            if (err.response.status === 500) {\n                dispatch(setAddNewPostError('Something went wrong, please try again later'))\n            }\n        }\n    }\n}\n\n\nexport const likePost = postId => async dispatch => {\n    try {\n        const res = await postsApi.likePost(postId)\n        if(res.status === 200){\n            dispatch(updateLikedPosts(postId,true))\n            dispatch(userProfileLikeCountPlus(postId))\n            dispatch(likeCountPlus(postId))\n        }\n    }\n    catch (err) {\n        if(err.response){\n            if (err.response.status === 400) {\n                //Post not found\n                //Post already liked\n            }\n            if (err.response.status === 500) {\n                //error\n            }\n        }\n    }\n}\n\nexport const unLikePost = postId => async dispatch => {\n    try {\n        const res = await postsApi.unlikePost(postId)\n        if(res.status === 200){\n            dispatch(updateLikedPosts(postId,false))\n            dispatch(likeCountMinus(postId))\n            dispatch(userProfileLikeCountMinus(postId))\n        }\n    }\n    catch (err) {\n        if(err.response){\n            if (err.response.status === 400) {\n                //Post not found\n                //Post not liked\n            }\n            if (err.response.status === 500) {\n                //error\n            }\n        }\n    }\n}\n\nexport const deletePost = postId => async dispatch => {\n    dispatch(setFormFetching(true))\n    try {\n        const res = await postsApi.deletePost(postId)\n        if(res.status === 200){\n            dispatch(removePost(postId))\n            dispatch(removePostForUsersProfile(postId))\n            dispatch(setFormFetching(false))\n        }\n    }\n    catch (err) {\n        dispatch(setFormFetching(false))\n        if(err.response){\n            if (err.response.status === 400) {\n                //Post not found\n            }\n            if (err.response.status === 403) {\n                //Unauthorized\n            }\n            if (err.response.status === 500) {\n                //error\n            }\n        }\n    }\n}\n","import { postsApi} from \"../api/api\"\nimport { app } from '../FBconfig/config'\nimport { updatePostsUserPhoto } from \"./homeReducer\"\n\nconst SET_USER_DATA = 'profileReducer/SET_USER_DATA'\nconst SET_IS_FETCHING = 'profileReducer/SET_IS_FETCHING'\nconst SET_FORM_FETCHING = 'profileReducer/SET_FORM_FETCHING'\nconst UPDATE_USER_PHOTO = 'profileReducer/UPDATE_USER_PHOTO'\nconst UPDATE_USER_DATA = 'profileReducer/UPDATE_USER_DATA'\nconst UPDATE_LIKED_POSTS = 'profileReducer/UPDATE_LIKED_POSTS'\nconst UPDATE_NOTIFICATIONS = 'profileReducer/UPDATE_NOTIFICATIONS'\nconst SET_USER_DATA_NULL = 'profilePage/SET_USER_DATA_NULL'\nconst SET_EDIT_PHOTO_MODAL = 'profilePage/SET_EDIT_PHOTO_MODAL'\nconst SET_EDIT_PROFILE_MODAL = 'profilePage/SET_EDIT_PROFILE_MODAL'\nconst ADD_USER_DETAILS_ERROR = 'profilePage/ADD_USER_DETAILS_ERROR'\n\nconst initialState = {\n    credentials: null,\n    likes: [],\n    notifications: [],\n    isProfileFetching: false,\n    isFormFetching: false,\n    addUserDetailsError: null,\n    editPhotoModal: false,\n    editProfileModal: false\n}\n\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state, ...action.payload\n            }\n        case SET_USER_DATA_NULL:\n            return {\n                ...state,\n                credentials: null,\n                likes: null\n            }\n        case ADD_USER_DETAILS_ERROR:\n            return {\n                ...state,\n                addUserDetailsError: action.error\n            }\n        case SET_IS_FETCHING:\n            return {\n                ...state,\n                isProfileFetching: action.isFetching\n            }\n        case SET_FORM_FETCHING:\n            return {\n                ...state,\n                isFormFetching: action.isFetching\n            }\n        case UPDATE_USER_DATA:\n            return {\n                ...state,\n                credentials: { ...state.credentials, bio: action.bio, location: action.location}\n            }\n        case UPDATE_USER_PHOTO:\n            return {\n                ...state, credentials: {...state.credentials, imageUrl: action.image}\n            }\n        case UPDATE_LIKED_POSTS:\n            return {\n                ...state,\n                likes: action.event ? [...state.likes, {postId: action.postId, userHandle: state.credentials.handle}]\n                    : state.likes.filter(post => post.postId !== action.postId)\n            }\n        case UPDATE_NOTIFICATIONS:\n            return {\n                ...state,\n                notifications: state.notifications.map(not => {\n                    for(let id of action.arr){\n                        if(not.notificationId === id){\n                            return {...not, read: true}\n                        }\n                    }\n                    return not\n                })\n            }\n        case SET_EDIT_PHOTO_MODAL:\n            return {\n                ...state,\n                editPhotoModal: action.isModal\n            }\n        case SET_EDIT_PROFILE_MODAL:\n            return {\n                ...state,\n                editProfileModal: action.isModal\n            }\n        default:\n            return state\n    }\n}\n\nconst setUserData = payload => ({type: SET_USER_DATA, payload})\nexport const setUserDataNull = () => ({type: SET_USER_DATA_NULL})\nconst setIsProfileFetching = isFetching => ({type: SET_IS_FETCHING, isFetching})\nexport const updateLikedPosts = (postId,event) => ({type: UPDATE_LIKED_POSTS, postId,event})\nexport const setEditPhotoModal = isModal => ({type: SET_EDIT_PHOTO_MODAL, isModal})\nexport const setEditProfileModal = isModal => ({type: SET_EDIT_PROFILE_MODAL, isModal})\nexport const setFormFetching = isFetching => ({type: SET_FORM_FETCHING, isFetching})\nconst addUserDetailsError = error => ({type: ADD_USER_DETAILS_ERROR, error})\nconst updateNotifications = arr => ({type: UPDATE_NOTIFICATIONS, arr})\nconst updateUserData = (bio,location) => ({type: UPDATE_USER_DATA, bio,location})\nconst updateUserPhoto = image => ({type: UPDATE_USER_PHOTO, image})\n\nexport const getAuthUserDetails = () => async dispatch => {\n    try {\n        dispatch(setIsProfileFetching(true))\n        const res = await postsApi.getAuthUser()\n        if(res.status === 200){\n            dispatch(setUserData(res.data))\n            dispatch(setIsProfileFetching(false))\n        }\n    }\n    catch (err) {\n        dispatch(setIsProfileFetching(false))\n        if (err.response && err.response.status === 500) {\n            //error\n        }\n    }\n}\n\nexport const addUserDetails = (bio,location) => async dispatch => {\n    dispatch(setFormFetching(true))\n    try {\n        const res = await postsApi.addUserDetails(bio,location)\n        if(res.status === 200){\n            dispatch(setFormFetching(false))\n            dispatch(updateUserData(bio,location))\n            dispatch(addUserDetailsError(null))\n            dispatch(setEditProfileModal(false))\n        }\n    }\n    catch (err) {\n        dispatch(setFormFetching(false))\n        if(err.response) {\n            if (err.response.status === 400) {\n                dispatch(addUserDetailsError(err.response.data.error))\n            }\n            if (err.response.status === 500) {\n                dispatch(addUserDetailsError('Something went wrong, please try again later'))\n            }\n        }\n    }\n}\n\nexport const editPhoto = (imageUrl,handle) => async dispatch => {\n    const db = app.firestore()\n    try {\n        db.doc(`/users/${handle}`).update({ imageUrl }).then(() => {\n            return db.collection('posts').where('userHandle', '==', handle)\n                .get()\n                .then(posts => {\n                    posts.forEach(doc => {\n                        doc.ref.update({userImage: imageUrl})\n                    })\n                })\n                .then(() => {\n                    return db.collection('comments').where('userHandle', '==', handle)\n                        .get()\n                        .then(comments => {\n                            comments.forEach(doc => {\n                                doc.ref.update({userImage: imageUrl})\n                            })\n                        })\n                })\n                .then(() => {\n                    dispatch(setFormFetching(false))\n                    dispatch(setEditPhotoModal(false))\n                    dispatch(updateUserPhoto(imageUrl))\n                    dispatch(updatePostsUserPhoto(imageUrl,handle))\n            })\n        })\n    }\n    catch (err) {\n        dispatch(setFormFetching(true))\n        console.log(err)\n    }\n}\n\nexport const markNotificationsRead = arr => async dispatch => {\n    try {\n        const res = await postsApi.markNotificationsRead(arr)\n        if(res.status === 200){\n            dispatch(updateNotifications(arr))\n        }\n    }\n    catch (err) {\n        if (err.response && err.response.status === 500) {\n            //error\n        }\n    }\n}","import { usersApi } from \"../api/api\"\nimport axios from 'axios'\nimport { setUserDataNull } from \"./profileReducer\"\n\nconst AUTHORIZATION_SUCCESS = 'authReducer/AUTHORIZATION_SUCCESS'\nconst SIGNUP_ERROR = 'authReducer/SIGNUP_ERROR'\nconst LOGIN_ERROR = 'authReducer/LOGIN_ERROR'\nconst SET_IS_FETCHING = 'authReducer/SET_IS_FETCHING'\n\nconst initialState = {\n    loginError: null,\n    signupError: null,\n    isAuth: false,\n    isFormFetching: false\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case AUTHORIZATION_SUCCESS:\n            return {\n                ...state,\n                loginError: null,\n                signupError: null,\n                isAuth: action.isAuth\n            }\n        case LOGIN_ERROR:\n            return {\n                ...state,\n                loginError: action.error,\n                isAuth: false\n            }\n        case SIGNUP_ERROR:\n            return {\n                ...state,\n                signupError: action.error,\n                isAuth: false\n            }\n        case SET_IS_FETCHING:\n            return {\n                ...state,\n                isFormFetching: action.isFormFetching\n            }\n        default:\n            return state\n    }\n}\n\nexport const authorizationsSuccess = (isAuth) => ({type: AUTHORIZATION_SUCCESS, isAuth})\nconst loginError = (error) => ({type: LOGIN_ERROR, error})\nconst signupError = (error) => ({type: SIGNUP_ERROR, error})\nconst setFormFetching = isFormFetching => ({type: SET_IS_FETCHING, isFormFetching})\n\nexport const signup = (handle,email,password,confirmPassword) => async dispatch => {\n    dispatch(setFormFetching(true))\n    dispatch(signupError(null))\n    try {\n        const res = await usersApi.signup(handle, email, password, confirmPassword)\n        if (res.status === 200) {\n            localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`)\n            dispatch(authorizationsSuccess(true))\n        }\n        dispatch(setFormFetching(false))\n    } catch (err) {\n        dispatch(setFormFetching(false))\n        if(err.response) {\n            if (err.response.status === 400) {\n                dispatch(signupError(err.response.data.error))\n            }\n            if (err.response.status === 500) {\n                dispatch(signupError('Something went wrong, please try again later'))\n            }\n        }\n    }\n}\n\nexport const login = (email,password) => async dispatch => {\n    dispatch(setFormFetching(true))\n    dispatch(loginError(null))\n    try {\n        const res = await usersApi.login(email, password)\n        if (res.status === 200) {\n            localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`)\n            dispatch(authorizationsSuccess(true))\n        }\n        dispatch(setFormFetching(false))\n    } catch (err) {\n        dispatch(setFormFetching(false))\n        if(err.response) {\n            if (err.response.status === 400) {\n                dispatch(loginError(err.response.data.error))\n            }\n            if (err.response.status === 500) {\n                dispatch(loginError('Something went wrong, please try again later'))\n            }\n        }\n    }\n}\n\nexport const signout = () => async dispatch => {\n    dispatch(setFormFetching(true))\n    try {\n        const res = await usersApi.logout()\n        if (res.status === 200) {\n            localStorage.removeItem('FBIdToken')\n            delete axios.defaults.headers.common['Authorization']\n            dispatch(setUserDataNull())\n            dispatch(authorizationsSuccess(false))\n        }\n        dispatch(setFormFetching(false))\n    } catch (err) {\n        dispatch(setFormFetching(false))\n        if(err.response) {\n            if (err.response.status === 500) {\n                console.log('Something Wrond')\n                //dispatch(loginError('Something went wrong, please try again later'))\n            }\n        }\n    }\n}\n\n\n\n\n","import React, {useRef} from \"react\"\nimport classes from \"./Modal.module.scss\"\n\nconst ModalWrapper = ({closeModal, modalWrapCenter = true, isModalOpen, children}) => {\n\n    const modalWrap = useRef()\n    const handleClickOutside = e => {\n        if (e.target === modalWrap.current) {\n            closeModal()\n        }\n    }\n\n    return (\n        <>\n            {\n                isModalOpen && <div className={modalWrapCenter ? classes.modalWrapCenter : classes.modalWrap} onMouseDown={handleClickOutside} ref={modalWrap}>\n                    <div className={classes.modal}>\n                        {children}\n                    </div>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default ModalWrapper","import React from \"react\"\nimport classes from './CredErrorBlock.module.scss'\n\nconst CredErrorBlock = ({errorMessage}) => {\n\n    if(errorMessage){\n        return (\n            <div className={classes.credErrorBlock}>\n                {errorMessage}\n            </div>\n        )\n    }\n\n    return null\n}\n\nexport default CredErrorBlock","import React from \"react\"\nimport classes from \"./InputBox.module.scss\"\n\n\nconst InputBox = ({value,label,setValue,isError}) => {\n\n    const type = label === 'Password' || label === 'Confirm Password' ? 'password' : 'text'\n\n    if(isError) {\n        return (\n            <div className={classes.inputBox}>\n                <input value={value} onChange={(e) => {setValue(e.target.value)}} className={classes.errorInput} type={type} id={label} required />\n                <label className={classes.errorLabel} htmlFor={label}>{label}</label>\n            </div>\n        )\n    }\n\n    return (\n        <div className={classes.inputBox}>\n            <input value={value} onChange={(e) => {setValue(e.target.value)}} className={classes.input} type={type} id={label} required />\n            <label className={classes.label} htmlFor={label}>{label}</label>\n        </div>\n    )\n}\n\nexport default InputBox","import React from \"react\"\nexport const Preloader = ({alignCenter = false, height = '80vh'}) => (\n    <div style={alignCenter ? {'display':'flex','justifyContent':'center','height':`${height}`,'alignItems':'center'} : {'display':'flex','justifyContent':'center'}}>\n        <div style={{'width':'40px','height':'40px'}} className=\"spinner-border text-info\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n        </div>\n    </div>\n)","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport btn from \"../../cssCommonModules/buttons.module.scss\"\nimport { addNewPost } from \"../../store/homeReducer\"\nimport ModalWrapper from \"./ModalWrapper\"\nimport CredErrorBlock from \"../common/CredErrorBlock/CredErrorBlock\"\nimport InputBox from \"../common/InputBox/InputBox\"\nimport { Preloader } from \"../common/Preloader/Preloaders\"\n\nconst CreatePostModal = ({addNewPost,setCreatePostModalOpen,isFormFetching,createPostModalOpen,addNewPostError}) => {\n    const[post,setPost] = useState('')\n\n    const submitHandler = e => {\n        e.preventDefault()\n        addNewPost(post)\n    }\n\n    useEffect(() => {\n        if(!isFormFetching){\n            setPost('')\n        }\n    },[isFormFetching])\n\n    const closeModal = () => {\n        setCreatePostModalOpen(false)\n        setPost('')\n    }\n\n    return (\n        <ModalWrapper closeModal={closeModal} isModalOpen={createPostModalOpen}>\n            <h5>Add a new Post</h5>\n            <form onSubmit={submitHandler}>\n                <CredErrorBlock errorMessage={addNewPostError}/>\n                <InputBox value={post} setValue={setPost} label={'Post'} isError={addNewPostError}/>\n                { isFormFetching && <Preloader/>}\n                <button disabled={isFormFetching} type=\"submit\" className={btn.btnSubmit} style={{marginLeft:'10px',marginTop: '30px'}}>Create</button>\n                <button disabled={isFormFetching} type=\"button\" onClick={closeModal} className={btn.btnSubmit} style={{marginLeft:'10px',marginTop: '30px'}}>Close</button>\n            </form>\n        </ModalWrapper>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isFormFetching: state.homePage.isFormFetching,\n    createPostModalOpen: state.homePage.createPostModalOpen,\n    addNewPostError: state.homePage.addNewPostError\n})\n\nexport default connect(mapStateToProps,{addNewPost})(CreatePostModal)","import React, { useEffect, useRef } from \"react\"\nimport { connect } from \"react-redux\"\nimport moment from \"moment\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport classes from './Notifications.module.scss'\nimport { Link } from \"react-router-dom\"\nimport { faHeart,faComment } from \"@fortawesome/free-solid-svg-icons\"\nimport { markNotificationsRead } from \"../../store/profileReducer\"\n\nconst Notifications = ({setIsNotificationsOpen,notifications,markNotificationsRead}) => {\n    const node = useRef()\n    const unreadNotifications = notifications.filter(not => !not.read)\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside) \n\n        return () => {\n            if(unreadNotifications.map(not => not.notificationId).length > 0){\n                markNotificationsRead(unreadNotifications.map(not => not.notificationId))\n            }\n            document.removeEventListener(\"mousedown\", handleClickOutside) \n        } \n    }, []) \n\n    const handleClickOutside = e => {\n        if (!node.current.contains(e.target)) {\n            setIsNotificationsOpen(false)\n        }\n    } \n\n    return (\n        <div className={classes.notifications} onClick={handleClickOutside} ref={node}>\n            {\n                notifications.length > 0 ? notifications.map((not,index) => {\n                    if(index < 10){\n                        const action = not.type === 'like' ? 'liked' : 'commented on'\n                        const time = moment(not.createdAt).fromNow()\n                        const icon = not.type === 'like'\n                            ? not.read ? <FontAwesomeIcon icon={faHeart} size=\"lg\" color='rgb(0,160,202)'/> : <FontAwesomeIcon icon={faHeart} size=\"lg\" color='rgb(255,75,0)'/>\n                            : not.read ? <FontAwesomeIcon icon={faComment} size=\"lg\" color='rgb(0,160,202)'/> : <FontAwesomeIcon icon={faComment} size=\"lg\" color='rgb(255,75,0)'/>\n                        return (\n                            <Link to={`/users/${not.recipient}/post/${not.postId}`} key={not.createdAt} className={classes.not}>\n                                {icon}\n                                <span>\n                                    {not.sender} {action} your post ({time})\n                                </span>\n                            </Link>\n                        )\n                    }\n                    return null\n                })\n                    :\n                    <div style={{padding:'20px 0 20px 20px',fontSize:'20px'}}>\n                        You have no notifications yet\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default connect(null,{markNotificationsRead})(Notifications)","import React from \"react\"\nimport classes from './Tooltip.module.scss'\n\nconst Tooltip = ({text,children}) => {\n    return (\n        <div className={classes.tooltip}>\n            <span className={classes.text}>{text}</span>\n            {children}\n        </div>\n    )\n}\n\nexport default Tooltip","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, Route } from \"react-router-dom\"\nimport classes from './Header.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faHome, faBell, faUserAlt } from '@fortawesome/free-solid-svg-icons'\nimport CreatePostModal from \"../../components/modals/CreatePostModal\"\nimport Notifications from \"../../components/Notifications/Notifications\"\nimport { setCreatePostModalOpen } from \"../../store/homeReducer\"\nimport Tooltip from \"../../components/common/Tooltip/Tooltip\"\n\n\nconst Header = ({isAuth,credentials,notifications,setCreatePostModalOpen}) => {\n    const[isNotificationOpen,setIsNotificationsOpen] = useState(false)\n\n    let unreadNotCount = notifications.filter(not => !not.read).length\n\n    return (\n        <div className={classes.header}>\n            {\n                isAuth ? <div className={classes.nav}>\n                    <Route exact path={'/'}>\n                        <Tooltip text=\"add post\">\n                            <div onClick={() => {setCreatePostModalOpen(true)}} onMouseMove={() => {}} className={classes.navIcon}>\n                                <FontAwesomeIcon icon={faPlus} size=\"lg\" color='white'/>\n                            </div>\n                        </Tooltip>\n                    </Route>\n                    {\n                        credentials &&\n                        <Route exact path={`/users/${credentials.handle}`}>\n                            <Tooltip text=\"add post\">\n                                <div onClick={() => {setCreatePostModalOpen(true)}} className={classes.navIcon}>\n                                    <FontAwesomeIcon icon={faPlus} size=\"lg\" color='white'/>\n                                </div>\n                            </Tooltip>\n                        </Route>\n                    }\n                    <Link to={'/'}>\n                        <Tooltip text=\"main page\">\n                            <div className={classes.navIcon}>\n                            <FontAwesomeIcon icon={faHome} size=\"lg\" color='white'/>\n                            </div>\n                        </Tooltip>\n                    </Link>\n                    <Link to={credentials ? `/users/${credentials.handle}` : '/'}>\n                        <Tooltip text=\"your profile\">\n                            <div className={classes.navIcon}>\n                                <FontAwesomeIcon icon={faUserAlt} size=\"lg\" color='white'/>\n                            </div>\n                        </Tooltip>\n                    </Link>\n                    <div style={{'position': 'relative'}}>\n                        <Tooltip text=\"notifications\">\n                            <div onMouseDown={() => {setIsNotificationsOpen(!isNotificationOpen)}} className={classes.navIcon}>\n                                <FontAwesomeIcon icon={faBell} size=\"lg\" color='white'/>\n                            </div>\n                        </Tooltip>\n                        {\n                            unreadNotCount > 0 && <div className={classes.notCount}>{unreadNotCount}</div>\n                        }\n                        {\n                            isNotificationOpen && <Notifications setIsNotificationsOpen={setIsNotificationsOpen} notifications={notifications}/>\n                        }\n                        <CreatePostModal setCreatePostModalOpen={setCreatePostModalOpen}/>\n                    </div>\n                </div>\n                    : <div className={classes.nav}>\n                        <div className={classes.navItem}>\n                            <Link to={'/login'}>Login</Link>\n                        </div>\n                        <div className={classes.navItem}>\n                            <Link to={'/'}>Home</Link>\n                        </div>\n                        <div className={classes.navItem}>\n                            <Link to={'/signup'}>Signup</Link>\n                        </div>\n                    </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth,\n    credentials: state.profilePage.credentials,\n    notifications: state.profilePage.notifications\n})\n\n\nexport default connect(mapStateToProps,{setCreatePostModalOpen})(Header)","import { postsApi } from \"../api/api\"\nimport { commentCountMinus, commentCountPlus } from \"./homeReducer\"\nimport { userProfileCommentCountMinus, userProfileCommentCountPlus } from \"./usersReducer\"\n\nconst SET_POST_DATA = 'fullPostReducer/SET_POST_DATA'\nconst GET_POST_DATA_ERROR = 'fullPostReducer/GET_POST_DATA_ERROR'\nconst GET_POST_DATA_FETCHING = 'fullPostReducer/GET_POST_DATA_FETCHING'\nconst ADD_NEW_COMMENT = 'fullPostReducer/ADD_NEW_COMMENT'\nconst SET_COMMENT_ERROR = 'fullPostReducer/SET_COMMENT_ERROR'\nconst FORM_IS_FETCHING = 'fullPostReducer/FORM_IS_FETCHING'\nconst REMOVE_COMMENT = 'fullPostReducer/REMOVE_COMMENT'\nconst DELETE_COMMENT_ANIMATIONS = 'fullPostReducer/DELETE_COMMENT_ANIMATIONS'\nconst SET_IS_DELETE_FETCHING = 'fullPostReducer/SET_IS_DELETE_FETCHING'\n\nconst initialState = {\n    post: null,\n    postDataError: false,\n    getPostFetching: false,\n    commentError: null,\n    isFormFetching: false,\n    isDeleteFetching: false\n}\n\nexport const fullPostReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_POST_DATA:\n            return { ...state, post: action.post }\n        case GET_POST_DATA_FETCHING:\n            return {\n                ...state,\n                getPostFetching: action.isFetching\n            }\n        case GET_POST_DATA_ERROR:\n            return {\n                ...state,\n                postDataError: action.bool\n            }\n        case ADD_NEW_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: [{...action.payload, isAnimation: true }, ...state.post.comments]}\n            }\n        case SET_COMMENT_ERROR:\n            return {\n                ...state,\n                commentError: action.error\n            }\n        case FORM_IS_FETCHING:\n            return {\n                ...state,\n                isFormFetching: action.isFetching\n            }\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: state.post.comments.filter(comment => comment.commentId !== action.commentId)}\n            }\n        case DELETE_COMMENT_ANIMATIONS:\n            return {\n                ...state,\n                post: {...state.post, comments: state.post.comments.map(comment => {\n                        if(comment.isAnimation){\n                            return {...comment, isAnimation: false}\n                        }\n                        return {...comment, isAnimation: null}\n                    })}\n            }\n        case SET_IS_DELETE_FETCHING:\n            return {\n                ...state,\n                isDeleteFetching: action.isFetching\n            }\n        default:\n            return state\n    }\n}\n\nconst setPostData = post => ({type: SET_POST_DATA,post})\nconst getPostDataError = bool => ({type: GET_POST_DATA_ERROR, bool})\nconst getPostDataFetching = isFetching => ({type: GET_POST_DATA_FETCHING, isFetching})\nexport const addNewComment = payload => ({type: ADD_NEW_COMMENT, payload})\nexport const setCommentError = error => ({type: SET_COMMENT_ERROR, error})\nexport const setIsFormFetching = isFetching => ({type: FORM_IS_FETCHING, isFetching})\nconst removeComment = commentId => ({type: REMOVE_COMMENT, commentId})\nexport const deleteCommentAnimation = comment => ({type: DELETE_COMMENT_ANIMATIONS, comment})\nconst setIsDeleteFetching = isFetching => ({type: SET_IS_DELETE_FETCHING, isFetching})\n\nexport const getPostDataById = postId => async dispatch => {\n    dispatch(getPostDataFetching(true))\n    try {\n        const res = await postsApi.getPostById(postId)\n        if(res.status === 200){\n            dispatch(getPostDataError(false))\n            dispatch(setPostData(res.data))\n            dispatch(getPostDataFetching(false))\n        }\n    }\n    catch (err) {\n        dispatch(getPostDataFetching(false))\n        if(err.response) {\n            if (err.response.status === 400) {\n                //dispatch(setCommentError(err.response.data.error))\n                //POST NOT FOUND\n            }\n            if (err.response.status === 500) {\n                dispatch(getPostDataError(true))\n            }\n        }\n    }\n}\n\nexport const sendComment = (postId,comment) => async dispatch => {\n    dispatch(setIsFormFetching(true))\n    try {\n        const res = await postsApi.commentPost(postId,comment)\n        if(res.status === 200){\n            dispatch(setIsFormFetching(false))\n            dispatch(commentCountPlus(postId))\n            dispatch(userProfileCommentCountPlus(postId))\n            dispatch(addNewComment(res.data))\n            setTimeout(() => {\n                dispatch(deleteCommentAnimation(res.data))\n            },3000)\n        }\n    }\n    catch (err) {\n        dispatch(setIsFormFetching(false))\n        if(err.response) {\n            if (err.response.status === 400) {\n                dispatch(setCommentError(err.response.data.error))\n            }\n            if (err.response.status === 500) {\n                dispatch(setCommentError('Something went wrong, please try again later'))\n            }\n        }\n    }\n}\n\nexport const deleteComment = (postId,commentId) => async dispatch => {\n    dispatch(setIsDeleteFetching(true))\n    try {\n        const res = await postsApi.deleteComment(postId,commentId)\n        if(res.status === 200){\n            dispatch(removeComment(commentId))\n            dispatch(commentCountMinus(postId))\n            dispatch(userProfileCommentCountMinus(postId))\n            dispatch(setIsDeleteFetching(false))\n        }\n    }\n    catch (err) {\n        dispatch(setIsDeleteFetching(false))\n        if(err.response) {\n            if (err.response.status === 400) {\n                console.log(400)\n            }\n            if (err.response.status === 500) {\n                console.log(500)\n            }\n        }\n    }\n}","import React from \"react\";\nimport classes from \"./PostContent.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment, faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faComments as Comment, faHeart as Heart } from \"@fortawesome/free-regular-svg-icons\";\n\nconst PostActions = ({isPostLiked,likePostHandler,unLikePostHandler,likeCount,openCommentModal,commentCount}) => {\n    return (\n        <div className={classes.actions}>\n            {\n                isPostLiked\n                    ? <div className={classes.likes}>\n                        <FontAwesomeIcon  onClick={unLikePostHandler} icon={faHeart} size=\"lg\"  color='rgb(0,160,202)'/>\n                        { likeCount === 1 && <small onClick={unLikePostHandler} className={classes.iconText}>{'1 like'}</small> }\n                        { likeCount > 1 && <small onClick={unLikePostHandler} className={classes.iconText}>{likeCount + ' likes'}</small> }\n                    </div>\n\n                    : <div onClick={likePostHandler} className={classes.likes}>\n                        <FontAwesomeIcon icon={Heart} size=\"lg\"  color='rgb(0,160,202)'/>\n                        { likeCount === 1 && <small onClick={likePostHandler} className={classes.iconText}>{'1 like'}</small> }\n                        { likeCount > 1 && <small onClick={likePostHandler} className={classes.iconText}>{likeCount + ' likes'}</small> }\n                    </div>\n            }\n            {\n                openCommentModal ? <div  onClick={openCommentModal} className={classes.comments}>\n                        <FontAwesomeIcon icon={Comment} size=\"lg\" color='rgb(0,160,202)'/>\n                        {commentCount === 1 && <small className={classes.iconText}>1 comment</small>}\n                        {commentCount > 1 && <small className={classes.iconText}>{commentCount + ' comments'}</small>}\n                    </div>\n                    : <div className={classes.comments} style={{'cursor':'auto'}}>\n                        <FontAwesomeIcon icon={faComment} size=\"lg\" color='rgb(0,160,202)'/>\n                        {commentCount === 1 && <small className={classes.iconText}>1 comment</small>}\n                        {commentCount > 1 && <small className={classes.iconText}>{commentCount + ' comments'}</small>}\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default PostActions","import React from \"react\"\nimport moment from \"moment\"\nimport classes from \"./PostContent.module.scss\"\nimport { Link } from \"react-router-dom\"\nimport PostActions from \"./PostActions\"\n\nconst  PostContent = ({post,isPostLiked,likePostHandler,unLikePostHandler,openCommentModal = false, likeCount,commentCount}) => {\n    return (\n        <div className={classes.content}>\n            <div className={classes.handle}><Link to={`/users/${post.userHandle}`}>{post.userHandle}</Link></div>\n            <small className={classes.createdAt}>{moment(post.createdAt).calendar()}</small>\n            <div className={classes.body}>{post.body}</div>\n            <PostActions\n                commentCount={commentCount}\n                likeCount={likeCount}\n                isPostLiked={isPostLiked}\n                likePostHandler={likePostHandler}\n                unLikePostHandler={unLikePostHandler}\n                openCommentModal={openCommentModal}\n            />\n        </div>\n    )\n}\n\nexport default PostContent","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport btn from \"../../cssCommonModules/buttons.module.scss\"\nimport ModalWrapper from \"./ModalWrapper\"\nimport { Preloader } from \"../common/Preloader/Preloaders\"\n\nconst DeleteModal = ({deleteItem,title,setDeletePostModal,isModalOpen,isHomeFormFetching,isDeleteFetching}) => {\n\n    const closeModal = () => {\n        setDeletePostModal(false)\n    }\n\n    return (\n        <ModalWrapper closeModal={closeModal} isModalOpen={isModalOpen}>\n            <h4>{title}</h4>\n            {isDeleteFetching && <Preloader/>}\n            {isHomeFormFetching && <Preloader/>}\n            <button disabled={isHomeFormFetching || isDeleteFetching} onClick={deleteItem} type=\"button\" className={btn.btnRed} style={{marginTop:'30px'}}>Delete</button>\n            <button disabled={isHomeFormFetching || isDeleteFetching} onClick={closeModal} type=\"button\" className={btn.btnSubmit} style={{marginLeft:'10px',marginTop:'30px'}}>Cancel</button>\n         </ModalWrapper>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isHomeFormFetching: state.homePage.isFormFetching,\n    isDeleteFetching: state.postPage.isDeleteFetching\n})\n\nexport default connect(mapStateToProps)(DeleteModal)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport classes from \"./Post.module.scss\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\"\nimport { deletePost } from \"../../store/homeReducer\"\nimport DeleteModal from \"../modals/DeleteModal\"\n\nconst DeletePost = ({isAuthUserPost,deletedPost,deletePost}) => {\n    const[deletePostModal,setDeletePostModal] = useState(false)\n\n    const removePost = () => {\n        deletePost(deletedPost)\n    }\n\n    return (\n        <div>\n            {\n                isAuthUserPost && <div onClick={() => {setDeletePostModal(true)}} className={classes.basket}>\n                    <FontAwesomeIcon icon={faTrashAlt} size=\"lg\" />\n                </div>\n            }\n            {\n                deletePostModal && <DeleteModal\n                    deleteItem={removePost}\n                    setDeletePostModal={setDeletePostModal}\n                    title={'Are you sure you want to delete this Post?'}\n                    isModalOpen={deletePostModal}\n                />\n            }\n        </div>\n    )\n}\n\nexport default connect(null,{deletePost})(DeletePost)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport classes from \"./Comment.module.scss\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\"\nimport { deleteComment } from \"../../../../store/fullPostReducer\"\nimport DeleteModal from \"../../DeleteModal\"\n\nconst DeletePost = ({isAuthUserPost,deletedComment,deleteComment,postId}) => {\n    const[deleteCommentModal,setDeleteCommentModal] = useState(false)\n\n    const removeComment = () => {\n        deleteComment(postId,deletedComment)\n    }\n\n    return (\n        <div>\n            {\n                isAuthUserPost && <div onClick={setDeleteCommentModal} className={classes.basket}>\n                    <FontAwesomeIcon icon={faTrashAlt}/>\n                </div>\n            }\n            {\n                deleteCommentModal && <DeleteModal\n                    deleteItem={removeComment}\n                    setDeletePostModal={setDeleteCommentModal}\n                    title={'Are you sure you want to delete this Comment?'}\n                    isModalOpen={deleteCommentModal}\n                />\n            }\n        </div>\n    )\n}\n\nexport default connect(null,{deleteComment})(DeletePost)","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport moment from \"moment\"\nimport classes from \"./Comment.module.scss\"\nimport DeleteComment from \"./DeleteComment\"\n\nconst Comment = ({comment,isFormFetching,authUserHandle,postId}) => {\n\n    const[isAuthUserComment, setIsAuthUserComment] = useState(false)\n\n    useEffect(() => {\n        if(authUserHandle === comment.userHandle){\n            setIsAuthUserComment(true)\n        } else {\n            setIsAuthUserComment(false)\n        }\n    },[authUserHandle,comment])\n\n    return (\n        <div className={comment.isAnimation === true ? classes.commentWithAnimations : classes.comment}>\n            <Link to={`/users/${comment.userHandle}`} style={{background: `rgba(0,0,0,.4) url(${comment.userImage}) center / cover no-repeat`}} className={classes.photo}/>\n            <div className={classes.content}>\n                <div className={classes.handle}>\n                    <Link to={`/users/${comment.userHandle}`}>{comment.userHandle}</Link>\n                </div>\n                <small className={classes.createdAt}>{moment(comment.createdAt).calendar()}</small>\n                <div className={classes.body}>{comment.body}</div>\n            </div>\n            <DeleteComment\n                isAuthUserPost={isAuthUserComment}\n                deletedComment={comment.commentId}\n                isFormFetching={isFormFetching}\n                postId={postId}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    authUserHandle: state.profilePage.credentials.handle,\n    isFormFetching: state.postPage.isFormFetching\n})\n\n\nexport default connect(mapStateToProps)(Comment)","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport btn from \"../../../../cssCommonModules/buttons.module.scss\"\nimport { Preloader } from \"../../../common/Preloader/Preloaders\"\nimport { sendComment } from \"../../../../store/fullPostReducer\"\nimport InputBox from \"../../../common/InputBox/InputBox\"\nimport CredErrorBlock from \"../../../common/CredErrorBlock/CredErrorBlock\"\n\nconst CommentForm = ({sendComment,commentError,postId,isFormFetching}) => {\n    const[comment,setComment] = useState('')\n\n    useEffect(()=>{\n        if(!isFormFetching && !commentError){\n            setComment('')\n        }\n    },[isFormFetching])\n\n    const submitHandler = e => {\n        e.preventDefault()\n        sendComment(postId,comment)\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <CredErrorBlock errorMessage={commentError}/>\n            <InputBox value={comment} setValue={setComment} label={'Your comment'} isError={commentError}/>\n            {isFormFetching && <Preloader/>}\n            <button disabled={isFormFetching} type=\"submit\" className={btn.btnSubmit} >Send</button>\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    commentError: state.postPage.commentError,\n    isFormFetching: state.postPage.isFormFetching\n})\n\nexport default connect(mapStateToProps,{sendComment})(CommentForm)","import classes from './CommentModal.module.scss'\nimport React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport moment from \"moment\"\nimport { Preloader } from \"../../common/Preloader/Preloaders\"\nimport Comment from \"./Comment/Comment\"\nimport CommentForm from \"./Comment/CommentForm\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport PostActions from \"../../Post/PostContent/PostActions\"\n\nconst FullPostModal = ({post,isPostLiked,isCommentModal,credentials,likePostHandler,unLikePostHandler,closeModal,likeCount,commentCount,getPostFetching}) => {\n\n    useEffect(() => {\n        if(isCommentModal){\n            document.body.style.overflow = 'hidden'\n        } else document.body.style.overflow = ''\n    },[isCommentModal])\n\n    return (\n        <ModalWrapper closeModal={closeModal} modalWrapCenter={false}\n                      style={{width: '550px'}}\n                      isModalOpen={isCommentModal && credentials}\n        >\n            {\n                !getPostFetching ? post &&\n                    <div>\n                        <div className={classes.post}>\n                            <Link to={`/users/${post.userHandle}`}>\n                                <div style={{background: `url(${post.userImage}) center / cover no-repeat`}} className={classes.photo}/>\n                            </Link>\n                            <div className={classes.postContent}>\n                                <Link to={`/users/${post.userHandle}`} className={classes.handle}>{post.userHandle}</Link>\n                                <small className={classes.createdAt}>{moment(post.createdAt).calendar()}</small>\n                                <div className={classes.body}>{post.body}</div>\n                                <div style={{marginLeft: '-100px'}}>\n                                <PostActions\n                                    isPostLiked={isPostLiked}\n                                    likePostHandler={likePostHandler}\n                                    unLikePostHandler={unLikePostHandler}\n                                    likeCount={likeCount}\n                                    commentCount={commentCount}\n                                />\n                                </div>\n                            </div>\n                            <div onClick={() => {closeModal()}} className={classes.closeButton}>\n                                <FontAwesomeIcon className={classes.closeIcon} icon={faTimes} color='rgba(0,160,202,.8)'/>\n                            </div>\n                        </div>\n                        <CommentForm postId={post.postId}/>\n                        <div className={classes.comments}>\n                            {\n                                post.comments.map(comment => {\n                                    return <Comment\n                                        key={comment.createdAt}\n                                        comment={comment}\n                                        postId={post.postId}\n                                    />\n                                })\n                            }\n                        </div>\n                    </div>\n                    : <Preloader/>\n            }\n        </ModalWrapper>\n        )\n}\n\n/*\n* if(!postDataError){\n        return (\n            <ModalWrapper closeModal={closeCommentModal} modalWrapCenter={false} style={{'width':'550px'}} isModalOpen={fullPostModalOpen}>\n                {\n                    !getPostFetching && post ?\n                        <div>\n                            <div className={classes.post}>\n                                { !isAuthUserPost ? <Link to={`/users/${post.userHandle}`}>\n                                        <div style={{'background': `url(${post.userImage}) center / cover no-repeat`}} className={classes.photo}/>\n                                    </Link>\n                                    : <div><div style={{'background': `url(${post.userImage}) center / cover no-repeat`}} className={classes.photo}/></div>\n                                }\n                                <PostContent\n                                    post={post}\n                                    isPostLiked={isPostLiked}\n                                    likePostHandler={likePostHandler}\n                                    unLikePostHandler={unLikePostHandler}\n                                    likeCount={likeCount}\n                                    commentCount={commentCount}\n                                />\n                                <div onClick={closeCommentModal} className={classes.closeButton}>\n                                    <FontAwesomeIcon className={classes.closeIcon} icon={faTimes} color='rgba(0,160,202,.8)'/>\n                                </div>\n                            </div>\n                            <CommentForm postId={post.postId}/>\n                            <div className={classes.comments}>\n                                {\n                                    post.comments.map(comment => {\n                                        return <Comment\n                                            key={comment.createdAt}\n                                            comment={comment}\n                                            isAuthUserPost={isAuthUserPost}\n                                        />\n                                    })\n                                }\n                            </div>\n                        </div>\n                        : <Preloader />\n                }\n            </ModalWrapper>\n        )\n    }\n    return (\n            <ModalWrapper closeModal={closeCommentModal} modalWrapCenter={false} style={{'width':'550px'}} isModalOpen={fullPostModalOpen}>\n                Something went wrong, please try again\n            </ModalWrapper>\n        )*/\n\nconst mapStateToProps = state => ({\n    post: state.postPage.post,\n    postDataError: state.postPage.postDataError,\n    getPostFetching: state.postPage.getPostFetching\n})\n\nexport default connect(mapStateToProps)(FullPostModal)","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport classes from './Post.module.scss'\nimport { likePost, unLikePost } from \"../../store/homeReducer\"\nimport { getPostDataById } from \"../../store/fullPostReducer\"\nimport PostContent from \"./PostContent/PostContent\"\nimport DeletePost from \"./DeletePost\"\nimport FullPostModal from \"../modals/FullPostModal/FullPostModal\"\n\nconst Post = ({isAuth,post,likePost,likedPosts,unLikePost,getPostDataById,credentials,commentModalOpen = false,history}) => {\n    const[isAuthUserPost,setIsAuthUserPost] = useState(false)\n    const[isCommentModal,setIsCommentModal] = useState(false)\n    const[oldPathState,setOldPath] = useState(null)\n    const[isPostLiked,setIsPostLiked] = useState(false)\n\n    useEffect(() => {\n        if(credentials && credentials.handle === post.userHandle){\n            setIsAuthUserPost(true)\n        } else {\n            setIsAuthUserPost(false)\n        }\n\n        if(likedPosts && likedPosts.some(likedPost => likedPost.postId === post.postId)){\n            setIsPostLiked(true)\n        } else {\n            setIsPostLiked(false)\n        }\n    })\n\n    useEffect(() => {\n        if(commentModalOpen){\n            openCommentModal()\n        }\n    },[])\n\n    const likePostHandler = () => {\n        if(!isAuth){\n            history.push('/login')\n        }\n        likePost(post.postId)\n    }\n\n    const unLikePostHandler = () => {\n        if(!isAuth){\n            history.push('/login')\n        }\n        unLikePost(post.postId)\n    }\n\n    const openCommentModal = () => {\n        let oldPath = window.location.pathname\n        const newPath = `/users/${post.userHandle}/post/${post.postId}`\n\n        if (oldPath === newPath) oldPath = `/users/${post.userHandle}`\n\n        window.history.pushState(null, null, newPath)\n\n        setOldPath(oldPath)\n        getPostDataById(post.postId)\n        setIsCommentModal(true)\n    }\n\n    const closeCommentModal = () => {\n\n        const path = oldPathState || `/users/${post.userHandle}`\n        history.push(path)\n        setIsCommentModal(false)\n    }\n\n    return (\n        <div className={classes.post}>\n             <Link to={`/users/${post.userHandle}`}>\n                <div className={classes.userPhoto} style={{background: `rgba(0,0,0,.5) url(${post.userImage}) center / cover no-repeat`}}/>\n            </Link>\n            <PostContent\n                post={post}\n                isPostLiked={isPostLiked}\n                likePostHandler={likePostHandler}\n                unLikePostHandler={unLikePostHandler}\n                openCommentModal={openCommentModal}\n                likeCount={post.likeCount}\n                commentCount={post.commentCount}\n            />\n            <FullPostModal\n                isPostLiked={isPostLiked}\n                credentials={credentials}\n                likePostHandler={likePostHandler}\n                unLikePostHandler={unLikePostHandler}\n                closeCommentModal={closeCommentModal}\n                likeCount={post.likeCount}\n                commentCount={post.commentCount}\n                closeModal={closeCommentModal}\n                isCommentModal={isCommentModal}\n            />\n            <DeletePost isAuthUserPost={isAuthUserPost} deletedPost={post.postId}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth,\n    likedPosts: state.profilePage.likes,\n    credentials: state.profilePage.credentials\n})\n\nexport default withRouter(connect(mapStateToProps,{likePost,unLikePost,getPostDataById})(Post))","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport btn from \"../../cssCommonModules/buttons.module.scss\"\nimport { addUserDetails } from \"../../store/profileReducer\"\nimport ModalWrapper from \"./ModalWrapper\"\nimport InputBox from \"../common/InputBox/InputBox\"\nimport CredErrorBlock from \"../common/CredErrorBlock/CredErrorBlock\"\n\nconst EditProfileModal = ({setShowModal,addUserDetails,isFormFetching,editProfileModal,addUserDetailsError}) => {\n    const [bio, setBio] = useState('')\n    const [isBioError, setBioError] = useState(false)\n    const [isLocationError, setLocationError] = useState(false)\n    const [location, setLocation] = useState('')\n\n    useEffect(() => {\n        if( addUserDetailsError && addUserDetailsError.indexOf('biography') !== -1){\n            setBioError(true)\n            setLocationError(false)\n        } else if(addUserDetailsError && addUserDetailsError.indexOf('location') !== -1){\n            setLocationError(true)\n            setBioError(false)\n        }  else {\n            setBioError(false)\n            setLocationError(false)\n        }\n        },[addUserDetailsError])\n\n    const submitHandler = e => {\n        e.preventDefault()\n        addUserDetails(bio, location)\n    }\n\n    const closeModal = () => {\n        setBio('')\n        setLocation('')\n        setShowModal(false)\n    }\n\n    return (\n        <ModalWrapper closeModal={closeModal} isModalOpen={editProfileModal}>\n            <h5 style={{marginBottom: '20px'}} >Here you can edit your bio and location</h5>\n            <form onSubmit={submitHandler}>\n                <CredErrorBlock errorMessage={addUserDetailsError}/>\n                <InputBox value={bio} setValue={setBio} label={'About You'} isError={isBioError}/>\n                <InputBox value={location} setValue={setLocation} label={'Your locations'} isError={isLocationError}/>\n                <button disabled={isFormFetching} type=\"submit\" className={btn.btnSubmit}>\n                    Edit\n                </button>\n                <button disabled={isFormFetching} type=\"button\" onClick={closeModal}\n                        className={btn.btnSubmit} style={{marginLeft: '10px'}}\n                >\n                    Close\n                </button>\n            </form>\n        </ModalWrapper>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    isFormFetching: state.profilePage.isFormFetching,\n    editProfileModal: state.profilePage.editProfileModal,\n    addUserDetailsError: state.profilePage.addUserDetailsError\n})\n\nexport default connect(mapStateToProps,{addUserDetails})(EditProfileModal)","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { app } from '../../FBconfig/config'\nimport btn from \"../../cssCommonModules/buttons.module.scss\"\nimport { Preloader } from \"../common/Preloader/Preloaders\"\nimport { editPhoto, setFormFetching } from \"../../store/profileReducer\"\nimport ModalWrapper from \"./ModalWrapper\"\nimport CredErrorBlock from \"../common/CredErrorBlock/CredErrorBlock\"\n\nconst EditPhotoModal = ({setEditPhotoModal,handle,editPhoto,isFetching,setFormFetching,editPhotoModal}) => {\n    const[file,setFile] = useState(null)\n    const[fileTypeError,setFileTypeError] = useState(false)\n\n    const onFileChange =  e => {\n        setFileTypeError(false)\n        const file = e.target.files[0]\n        setFile(file)\n    }\n\n    const submitHandler = async e => {\n        e.preventDefault()\n        if(file.type.split('/')[1] === 'png' || file.type.split('/')[1] === 'jpeg'){\n            setFormFetching(true)\n            const storageRef = app.storage().ref()\n            const fileRef = storageRef.child(file.name)\n            await fileRef.put(file)\n            await fileRef.getDownloadURL()\n            editPhoto(await fileRef.getDownloadURL(),handle)\n        } else {\n            setFileTypeError(true)\n        }\n    }\n\n    const closeModal = () => {\n        setEditPhotoModal(false)\n    }\n\n    return (\n        <ModalWrapper closeModal={setEditPhotoModal} isModalOpen={editPhotoModal}>\n                <h5>Here you can add or change your photo</h5>\n                <form onSubmit={submitHandler}>\n                    <div>\n                        <CredErrorBlock errorMessage={fileTypeError && `Invalid type of the file, must be png or jpeg`}/>\n                        <input type=\"file\" onChange={onFileChange} style={{marginTop:'10px'}}/>\n                    </div>\n                    {isFetching && <Preloader/>}\n                    <button disabled={isFetching} type=\"submit\" className={btn.btnSubmit} style={{marginLeft:'10px',marginTop: '30px'}}>Edit</button>\n                    <button disabled={isFetching} type=\"button\" onClick={closeModal} className={btn.btnSubmit} style={{marginLeft:'10px',marginTop: '30px'}}>Close</button>\n                </form>\n        </ModalWrapper>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isFetching: state.profilePage.isFormFetching,\n    editPhotoModal: state.profilePage.editPhotoModal\n})\n\nexport default connect(mapStateToProps,{editPhoto,setFormFetching})(EditPhotoModal)","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport classes from './Profile.module.scss'\nimport btn from \"../../cssCommonModules/buttons.module.scss\"\nimport moment from \"moment\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faMapMarkerAlt, faPen } from '@fortawesome/free-solid-svg-icons'\nimport { setEditPhotoModal, setEditProfileModal } from \"../../store/profileReducer\"\nimport { Preloader } from \"../common/Preloader/Preloaders\"\nimport { signout } from \"../../store/authReducer\"\nimport { Link } from \"react-router-dom\"\nimport EditProfileModal from \"../modals/EditProfileModal\"\nimport EditPhotoModal from \"../modals/EditPhotoModal\"\n\nconst Profile = ({isAuth, credentials, signout, setEditPhotoModal, setEditProfileModal}) => {\n\n    const openEditPhotoModal = () => {\n        setEditPhotoModal(true)\n    }\n\n    const openEditProfileModal = () => {\n        setEditProfileModal(true)\n    }\n\n    const logout = () => {\n        signout()\n    }\n\n    return (\n        <div className={classes.userProfileWrap}>\n            <div className={classes.userProfile}>\n                {isAuth\n                    ? <div>\n                        {\n                            credentials\n                                ? <div className={classes.content}>\n                                    <div style={{background: `url(${credentials.imageUrl}) center / cover no-repeat`}}\n                                         className={classes.photo}>\n                                        <div onClick={openEditPhotoModal} className={classes.editPhoto}>\n                                            <FontAwesomeIcon icon={faPen} size=\"lg\" color='rgba(0,160,202,.8)'/>\n                                        </div>\n                                    </div>\n                                    <div className={classes.handle}>{credentials.handle}</div>\n                                    {credentials.bio && <div className={classes.bio}>{credentials.bio}</div>}\n                                    {credentials.location && <div className={classes.location}>\n                                        <FontAwesomeIcon icon={faMapMarkerAlt} size=\"lg\" color='rgba(0,160,202,.8)'/>\n                                        <span>{credentials.location}</span>\n                                    </div>}\n                                    <div className={classes.createdAt}>Joined {moment(credentials.createdAt).calendar()}</div>\n                                    <div onClick={logout} className={classes.signout}>\n                                        <FontAwesomeIcon icon={faSignOutAlt} size=\"lg\" color='rgba(0,160,202,.8)'/>\n                                        <span>signout</span></div>\n                                    <div onClick={openEditProfileModal} className={classes.edit}>\n                                        <FontAwesomeIcon icon={faPen} size=\"lg\" color='rgba(0,160,202,.8)'/>\n                                        <span>edit</span>\n                                    </div>\n                                    <EditProfileModal setShowModal={setEditProfileModal}/>\n                                    <EditPhotoModal handle={credentials.handle} setEditPhotoModal={setEditPhotoModal}/>\n                                </div>\n                                : <Preloader alignCenter={true} height={'260px'}/>\n                        }\n                    </div>\n                    : <div>\n                        <div>You are not authorized, please login or sign up.</div>\n                        <Link to={'/login'}>\n                            <button className={btn.btnSubmit} style={{padding: '5px 15px', marginTop: '5px'}}>\n                                Login\n                            </button>\n                        </Link>\n                        <Link to={'/signup'}>\n                            <button className={btn.btnSubmit} style={{padding: '5px 15px', marginTop: '5px', marginLeft: '10px'}}>\n                                Sign up\n                            </button>\n                        </Link>\n                    </div>\n                }\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth,\n    credentials: state.profilePage.credentials,\n    isProfileFetching: state.profilePage.isProfileFetching\n})\n\nexport default connect(mapStateToProps, { signout, setEditPhotoModal, setEditProfileModal})(Profile)","import React, { useEffect } from 'react' \nimport { connect } from \"react-redux\"\nimport classes from './Home.module.scss'\nimport { getPosts } from \"../../store/homeReducer\"\nimport Post from \"../../components/Post/Post\" \nimport { Preloader } from \"../../components/common/Preloader/Preloaders\"\nimport Profile from \"../../components/Profile/Profile\"\nimport { getAuthUserDetails } from \"../../store/profileReducer\"\n\nconst Home = ({isAuth,getAuthUserDetails,getPosts,posts,isHomePageFetching,isProfileFetching}) => {\n    const isMobileScreenWidth = document.documentElement.clientWidth <= 700\n\n    useEffect(() => {\n        if (isAuth) {\n            getAuthUserDetails()\n        }\n    }, [isAuth])\n\n    useEffect(() => {\n        getPosts()\n    },[])\n\n    if(isAuth){\n       return (\n           <div className={classes.homeContainer}>\n               {\n                !isHomePageFetching && !isProfileFetching ?\n                    <>\n                        <div className={classes.postsContainer}>\n                            <span className={classes.postsTitle}>POSTS</span>\n                            {\n                                posts.map(post => {\n                                    return <Post key={post.postId} post={post} />\n                                })\n                            }\n                        </div>\n                        { !isMobileScreenWidth && <Profile /> }\n                    </>\n                    : <div style={{width:'100%'}}>\n                        <Preloader alignCenter={true} height={'80vh'} />\n                    </div>\n               }\n           </div>\n       )\n    }\n    return (\n        <div className={classes.homeContainer}>\n            {\n                !isHomePageFetching ? <>\n                        <div className={classes.postsContainer}>\n                            {\n                                posts.map(post => {\n                                    return <Post key={post.postId} post={post} />\n                                })\n                            }\n                        </div>\n                        { !isMobileScreenWidth && <Profile /> }\n                    </>\n                    : <div style={{width:'100%'}}>\n                        <Preloader alignCenter={true} height={'80vh'} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth,\n    posts: state.homePage.posts,\n    isHomePageFetching: state.homePage.isHomePageFetching,\n    isProfileFetching: state.profilePage.isProfileFetching\n})\n\n\nexport default connect(mapStateToProps,{getAuthUserDetails,getPosts})(Home)\n","import React, { useEffect, useState } from \"react\"\nimport { withRouter } from \"react-router-dom\" \nimport {connect} from \"react-redux\"\nimport classes from \"../../components/Profile/Profile.module.scss\"\nimport homeClasses from \"../Home/Home.module.scss\"\nimport moment from \"moment\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport Post from \"../../components/Post/Post\"\nimport { Preloader } from \"../../components/common/Preloader/Preloaders\"\nimport { getUserDetails } from \"../../store/usersReducer\"\nimport { getAuthUserDetails } from \"../../store/profileReducer\"\nimport Profile from \"../../components/Profile/Profile\"\n\nconst UsersProfile = ({isAuth,credentials,posts,user,getUserDetailsFetching,getUserDetails,match,getAuthUserDetails}) => {\n    const userHandle = match.params.handle\n    const postId = match.params.postId\n    const[isAuthUserProfile,setIsAuthUserProfile] = useState(false)\n\n    if(user && userHandle !== user.handle){\n        window.history.go(0)\n    }\n\n    const filteredPosts = posts.sort((a, b) =>  {\n        a = new Date(a.createdAt)\n        b = new Date(b.createdAt)\n        return a>b ? -1 : a<b ? 1 : 0\n    })\n\n    useEffect(() => {\n        if(credentials && user && user.handle === credentials.handle){\n            setIsAuthUserProfile(true)\n        } else {\n            setIsAuthUserProfile(false)\n        }\n    },[user,credentials])\n\n    useEffect(() => {\n        getUserDetails(userHandle)\n    },[])\n\n    useEffect(() => {\n        if(isAuth){\n            getAuthUserDetails()\n        }\n    },[isAuth])\n\n    const postsMarkup = (\n        postId ?\n            filteredPosts.map(post => {\n                if(post.postId !== postId){\n                    return <Post key={post.postId} post={post}/>\n                } else {\n                    return <Post key={post.postId} post={post} commentModalOpen/>\n                }\n            })\n            : filteredPosts.map(post => {\n                return <Post key={post.postId} post={post}/>\n            })\n    )\n\n    return (\n        <div>\n            {\n                !getUserDetailsFetching && user ?\n                    <div className={homeClasses.homeContainer}>\n                        <div className={homeClasses.postsContainer}>\n                            <span className={classes.postsTitle}>posts of {user.handle}</span>\n                            {\n                                posts.length > 0 ? <div>{postsMarkup}</div> : <div>This user has no posts</div>\n                            }\n                        </div>\n                        {\n                            isAuthUserProfile ? <Profile/> : <div className={classes.userProfileWrap}>\n                                <div className={classes.userProfile}>\n                                    <div className={classes.content}>\n                                        <div style={{background: `url(${user.imageUrl}) center / cover no-repeat`}} className={classes.photo}/>\n                                        <div className={classes.handle}>{user.handle}</div>\n                                        {user.bio && <div className={classes.bio}>{user.bio}</div>}\n                                        {user.location && <div className={classes.location}>\n                                            <FontAwesomeIcon icon={faMapMarkerAlt} size=\"lg\" color='rgba(0,160,202,.8)'/>\n                                            <span>{user.location}</span>\n                                        </div>}\n                                        <div className={classes.createdAt}>Joined {moment(user.createdAt).calendar()}</div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                : <Preloader alignCenter={true} height={'80vh'} />\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth,\n    posts: state.userPage.posts,\n    user: state.userPage.user,\n    getUserDetailsFetching: state.userPage.getUserDetailsFetching,\n    credentials: state.profilePage.credentials\n})\n\nexport default withRouter(connect(mapStateToProps,{getUserDetails,getAuthUserDetails})(UsersProfile))","import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport {connect} from \"react-redux\"\n\nexport const withAuthRedirect = (Component,toRedirect) => {\n    const RedirectComponent = (props) => {\n        if(props.isAuth) return <Redirect to={toRedirect}/>\n        return <Component {...props.isAuth}/>\n    }\n\n    const mapStateToProps = state => ({\n        isAuth: state.auth.isAuth\n    })\n\n    return connect(mapStateToProps)(RedirectComponent)\n}\n\n","import React from \"react\"\nimport classes from './auth.module.scss'\nimport { faLock } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst AuthFormContainer = ({height,children}) => {\n    return (\n        <div className={classes.authPage} style={{height}}>\n            <div className={classes.authContent}>\n                <div className={classes.lockIcon}>\n                    <FontAwesomeIcon icon={faLock} size=\"2x\" color='#fff'/>\n                </div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default AuthFormContainer","import React, { useEffect, useState } from \"react\"\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport classes from \"./auth.module.scss\"\nimport { login } from \"../../store/authReducer\"\nimport AuthFormContainer from \"./AuthFormContainer\"\nimport InputBox from \"../../components/common/InputBox/InputBox\"\nimport CredErrorBlock from \"../../components/common/CredErrorBlock/CredErrorBlock\"\n\nconst Login = ({login,loginError,isFormFetching}) => {\n    const[email, setEmail] = useState('')\n    const[password, setPassword] = useState('')\n\n    useEffect(() => {\n        setEmail('')\n        setPassword('')\n    },[loginError])\n\n    const onSubmitHandle = (e) => {\n        e.preventDefault()\n        login(email,password)\n    }\n\n    return (\n        <AuthFormContainer height={530}>\n            <h2 className={classes.title}>Login as Existing user</h2>\n            <form onSubmit={onSubmitHandle} className={classes.form}>\n                <CredErrorBlock errorMessage={loginError}/>\n                <InputBox value={email} setValue={setEmail} label={'Email'} />\n                <InputBox value={password} setValue={setPassword} label={'Password'} />\n                <button disabled={isFormFetching} className={classes.button} type=\"submit\" >LOGIN</button>\n            </form>\n            <div className={classes.link}>\n                <small>Do not have an account? sign up <Link to={'/signup'}>here</Link></small>\n            </div>\n        </AuthFormContainer>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isFormFetching: state.auth.isFormFetching,\n    loginError: state.auth.loginError\n})\n\nexport default withAuthRedirect(connect(mapStateToProps, {login})(Login), '/')","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport classes from \"./auth.module.scss\"\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\nimport { signup } from \"../../store/authReducer\"\nimport CredErrorBlock from \"../../components/common/CredErrorBlock/CredErrorBlock\"\nimport InputBox from \"../../components/common/InputBox/InputBox\"\nimport AuthFormContainer from \"./AuthFormContainer\"\n\nconst Signup = ({signup,signupError,isFormFetching}) => {\n    const[handle, setHandle] = useState('')\n    const[email, setEmail] = useState('')\n    const[password, setPassword] = useState('')\n    const[confirmPassword, setConfirmPassword] = useState('')\n\n    const onSubmitHandle = (e) => {\n        e.preventDefault()\n        signup(handle,email,password,confirmPassword)\n    }\n\n    return (\n        <AuthFormContainer height={650}>\n            <h2 className={classes.title}>Create an account</h2>\n            <form onSubmit={onSubmitHandle} className={classes.form}>\n                <CredErrorBlock errorMessage={signupError}/>\n                <InputBox value={handle} setValue={setHandle} label={'Handle'} />\n                <InputBox value={email} setValue={setEmail} label={'Email'} />\n                <InputBox value={password} setValue={setPassword} label={'Password'} />\n                <InputBox value={confirmPassword} setValue={setConfirmPassword} label={'Confirm Password'} />\n                <button disabled={isFormFetching} className={classes.button} type=\"submit\">LOGIN</button>\n            </form>\n            <div className={classes.link}>\n                <small>Already have an account? login <Link to={'/login'}>here</Link></small>\n            </div>\n        </AuthFormContainer>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isFormFetching: state.auth.isFormFetching,\n    signupError: state.auth.signupError\n})\n\nexport default withAuthRedirect(connect(mapStateToProps,{signup})(Signup), '/')","import React, { useEffect } from 'react'\nimport { connect } from \"react-redux\"\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport axios from \"axios\"\nimport jwtDecode from \"jwt-decode\"\nimport './App.css'\nimport { authorizationsSuccess } from \"./store/authReducer\"\nimport Header from \"./pages/Header/Header\"\nimport Home from \"./pages/Home/Home\"\nimport UserProfile from \"./pages/UsersProfile/UsersProfile\"\nimport Login from \"./pages/auth/Login\"\nimport Signup from \"./pages/auth/Signup\"\n\nconst App = ({authorizationsSuccess,isAuth,...props}) => {\n    useEffect(() => {\n        const token = localStorage.FBIdToken\n        if(token){\n            const decodedToken = jwtDecode(token)\n            if(decodedToken.exp * 1000 < Date.now()){\n                localStorage.removeItem('FBIdToken')\n                if(isAuth === true) authorizationsSuccess(false)\n                props.history.push('/login')\n            } else {\n                axios.defaults.headers.common['Authorization'] = token\n                authorizationsSuccess(true)\n            }\n        }\n    },[isAuth])\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Switch>\n                <Route exact path='/'>\n                    <Home/>\n                </Route>\n                <Route exact path='/login'>\n                    <Login/>\n                </Route>\n                <Route exact path='/signup'>\n                    <Signup/>\n                </Route>\n                <Route exact  path='/users/:handle'>\n                    <UserProfile/>\n                </Route>\n                <Route exact path='/users/:handle/post/:postId'>\n                    <UserProfile/>\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default withRouter(connect(mapStateToProps, {authorizationsSuccess})(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunk from \"redux-thunk\"\nimport { authReducer } from \"./authReducer\"\nimport { homeReducer } from \"./homeReducer\"\nimport { profileReducer } from \"./profileReducer\"\nimport { fullPostReducer } from \"./fullPostReducer\"\nimport { usersReducer } from \"./usersReducer\"\n\n\nexport const storeReducers = combineReducers({\n    profilePage: profileReducer,\n    homePage: homeReducer,\n    auth: authReducer,\n    postPage: fullPostReducer,\n    userPage: usersReducer\n})\n\nexport const store = createStore(storeReducers,applyMiddleware(thunk))\n\nwindow.store = store","import React from 'react' \nimport ReactDOM from 'react-dom' \nimport './index.css' \nimport App from './App' \nimport * as serviceWorker from './serviceWorker' \nimport {BrowserRouter as Router} from \"react-router-dom\" \nimport {Provider} from \"react-redux\" \nimport { store } from \"./store/rootStore\"\n\ndocument.title = '48th-Social-Network'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <Provider store={store}>\n            <App />\n          </Provider>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n) \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister() \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfileWrap\":\"Profile_userProfileWrap__3eSWZ\",\"userProfile\":\"Profile_userProfile__3p1PP\",\"postsTitle\":\"Profile_postsTitle__D_15u\",\"content\":\"Profile_content__hGFcI\",\"photo\":\"Profile_photo__2hYs-\",\"editPhoto\":\"Profile_editPhoto__1fXT0\",\"handle\":\"Profile_handle__1425b\",\"bio\":\"Profile_bio__1JYOO\",\"location\":\"Profile_location__1gBAS\",\"createdAt\":\"Profile_createdAt___qT5W\",\"signout\":\"Profile_signout__1i4Dr\",\"edit\":\"Profile_edit__3kxIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostContent_content__bJfRF\",\"handle\":\"PostContent_handle__2Xmhs\",\"createdAt\":\"PostContent_createdAt__3p2f8\",\"body\":\"PostContent_body__NrYgE\",\"actions\":\"PostContent_actions__1GNt5\",\"likes\":\"PostContent_likes__6_JRN\",\"comments\":\"PostContent_comments__1izfv\",\"iconText\":\"PostContent_iconText__1_Y67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnSubmit\":\"buttons_btnSubmit__1y233\",\"btnRed\":\"buttons_btnRed__2HXHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPage\":\"auth_authPage__3uFxe\",\"authContent\":\"auth_authContent__3SEah\",\"title\":\"auth_title__3ILpd\",\"form\":\"auth_form___Mutf\",\"lockIcon\":\"auth_lockIcon__1MgOi\",\"button\":\"auth_button__31eXg\",\"focus\":\"auth_focus__1bZC-\",\"link\":\"auth_link__1656M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__63o6c\",\"nav\":\"Header_nav__16A6q\",\"navIcon\":\"Header_navIcon__2fqSB\",\"navItem\":\"Header_navItem__TNyBF\",\"notCount\":\"Header_notCount__3hp0i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__3Kcfk\",\"basket\":\"Comment_basket__2ZZ79\",\"commentWithAnimations\":\"Comment_commentWithAnimations__1gCCq\",\"photo\":\"Comment_photo__1D9IY\",\"content\":\"Comment_content__2ih2Q\",\"handle\":\"Comment_handle__VcN6f\",\"createdAt\":\"Comment_createdAt__2o3YE\",\"body\":\"Comment_body__L234V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"CommentModal_post__1H3wx\",\"postContent\":\"CommentModal_postContent__30ipi\",\"handle\":\"CommentModal_handle__3c58r\",\"createdAt\":\"CommentModal_createdAt__3IWb-\",\"body\":\"CommentModal_body__14q3E\",\"closeButton\":\"CommentModal_closeButton__Q8nzL\",\"closeIcon\":\"CommentModal_closeIcon__mePVn\",\"photo\":\"CommentModal_photo__2eSQT\",\"comments\":\"CommentModal_comments__1dJ2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeContainer\":\"Home_homeContainer__2c8ZI\",\"postsContainer\":\"Home_postsContainer__1JBmx\",\"postsTitle\":\"Home_postsTitle__2hhe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBox\":\"InputBox_inputBox__2Cgqm\",\"input\":\"InputBox_input__2xqou\",\"errorInput\":\"InputBox_errorInput__3rkb9\",\"label\":\"InputBox_label__3EwX0\",\"errorLabel\":\"InputBox_errorLabel__2IyNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3ZAVa\",\"userPhoto\":\"Post_userPhoto__5HIFi\",\"basket\":\"Post_basket__2CguM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrap\":\"Modal_modalWrap__1BIHq\",\"modal\":\"Modal_modal__2__RI\",\"modalWrapCenter\":\"Modal_modalWrapCenter__16ptC\",\"closeModal\":\"Modal_closeModal__2cLR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notifications\":\"Notifications_notifications__fT4Rk\",\"not\":\"Notifications_not__1EvGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"Tooltip_tooltip__1s-td\",\"text\":\"Tooltip_text__2Mtfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"credErrorBlock\":\"CredErrorBlock_credErrorBlock__T6fEf\"};"],"sourceRoot":""}